{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortList","TodoList","todos","filter","currentTodo","selectTodo","onChangeTodo","sortSelect","sortInput","visibleTodos","todo","completed","title","includes","toLowerCase","Active","Completed","className","map","id","classNames","type","onClick","TodoFilter","onFilter","useState","searchField","setField","select","setSelect","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","currentUser","setCurrUser","useEffect","fetchData","a","userId","arrayUsersFromServer","href","email","name","App","arrOfTodos","setTodos","sortParams","setSortParam","selectedTodo","setTodo","errors","setError","arrayTodosFromServer","input","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a060263.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  filter: {\n    sortSelect: string,\n    sortInput: string,\n  }\n  currentTodo: Todo | null\n  onChangeTodo: (todo: Todo) => void\n};\n\nenum SortList {\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  filter,\n  currentTodo,\n  onChangeTodo: selectTodo,\n}) => {\n  const { sortSelect, sortInput } = filter;\n\n  const visibleTodos = todos.filter(todo => {\n    const { completed, title } = todo;\n\n    if (!title.includes(sortInput.toLowerCase())) {\n      return false;\n    }\n\n    switch (sortSelect) {\n      case SortList.Active:\n        return !completed;\n      case SortList.Completed:\n        return completed;\n      default:\n        return true;\n    }\n  });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => {\n          const {\n            id,\n            completed,\n            title,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': id === currentTodo?.id },\n              )}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      {\n                        'fa-eye': id !== currentTodo?.id,\n                        'fa-eye-slash': id === currentTodo?.id,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  onFilter: (select: string, input: string) => void\n};\n\nexport const TodoFilter:React.FC<Props> = ({ onFilter }) => {\n  const [searchField, setField] = useState('');\n  const [select, setSelect] = useState('all');\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelect(value);\n    onFilter(value, searchField);\n  };\n\n  const handleSearchFieldChange\n  = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setField(value);\n    onFilter(select, value);\n  };\n\n  const clearSearchField = () => {\n    setField('');\n    onFilter(select, '');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={select}\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={searchField}\n          onChange={handleSearchFieldChange}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!searchField.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearchField}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\n\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  currentTodo: Todo | null\n  onChangeTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  currentTodo,\n  onChangeTodo,\n}) => {\n  const [currentUser, setCurrUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (currentTodo !== null) {\n      const fetchData = async () => {\n        const arrayUsersFromServer = await getUser(currentTodo?.userId);\n\n        setCurrUser(arrayUsersFromServer);\n      };\n\n      fetchData();\n    }\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {currentUser === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onChangeTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [arrOfTodos, setTodos] = useState<Todo[]>([]);\n  const [sortParams, setSortParam] = useState({\n    sortSelect: '',\n    sortInput: '',\n  });\n  const [selectedTodo, setTodo] = useState<Todo | null>(null);\n  const [errors, setError] = useState<string>('');\n\n  const setFilterParam = (select: string, input: string) => {\n    setSortParam({\n      sortSelect: select,\n      sortInput: input,\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const arrayTodosFromServer = await getTodos();\n\n        setTodos(arrayTodosFromServer);\n      } catch {\n        setError('Error: Something wrong, try latter');\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilter={setFilterParam} />\n            </div>\n\n            <div className=\"block\">\n              {!arrOfTodos.length && !errors && (\n                <Loader />\n              )}\n              {errors && (\n                <p>{errors}</p>\n              )}\n              {!!arrOfTodos.length && !errors && (\n                <TodoList\n                  todos={arrOfTodos}\n                  filter={sortParams}\n                  onChangeTodo={setTodo}\n                  currentTodo={selectedTodo}\n                />\n              )}\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null\n      && (\n        <TodoModal\n          currentTodo={selectedTodo}\n          onChangeTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}